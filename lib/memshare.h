/*====================================================================================================================*/
/*-------------------------------------------------------------*/
/*  FileName : memshare.h                                      */
/*  Author   : suxiqing                                        */
/*  EditTime : 2018-1-15                                       */
/*  CopyRight:                                                 */
/*-------------------------------------------------------------*/
/*====================================================================================================================*/
/*====================================================================================================================*/
#ifndef _MEM_SHARE_H_
#define _MEM_SHARE_H_


/*====================================================================================================================*/
/*====================================================================================================================*/
/*-----------------------------------------------------------*/
/*1, 平台的初始化进程（或第一个进程), 必须执行mem_share_init */
/*   (不再需要执行mem_share_attach)                                */ 
/*2, 其他进程执行mem_share_attach, 严禁执行mem_share_init              */
/*3, 经过1,2之后可以正常执行 mem_share_malloc,mem_share_free */
/*4, 所有进程退出时必须执行 mem_share_detach                            */
/*5, 初始化进程（或第一个进程),退出时需要执行mem_share_uninit     */
/*6, 地址传给其他进程时,必须使用mem_share_addrunmap     ,传递该函 */
/*   数返回值.                                                   */
/*7, 收到其他进程地址时,必须使用mem_share_addrmap     ,映射为本进 */
/*   地址.                                                     */
/*-----------------------------------------------------------*/

/*====================================================================================================================*/
/*====================================================================================================================*/
/*-----------------------------------------------------------*/
/*Name: mem_share_init                                       */
/*Desc: 平台共享内存初始化,创建  平台第一个进程调用                              */
/*-----------------------------------------------------------*/
int mem_share_init(void);

/*-----------------------------------------------------------*/
/*Name: mem_share_uninit                                     */
/*Desc: 平台共享内存初始化,创建  平台第一个进程调用                              */
/*-----------------------------------------------------------*/
int mem_share_uninit(void);

/*-----------------------------------------------------------*/
/*Name: mem_share_attach                                     */
/*Desc: 捆绑共享内存                                               */
/*-----------------------------------------------------------*/
int mem_share_attach(void);

/*-----------------------------------------------------------*/
/*Name: mem_share_detach                                     */
/*Desc: 平台共享内存初始化,创建  平台第一个进程调用                              */
/*-----------------------------------------------------------*/
int mem_share_detach(void);

/*-----------------------------------------------------------*/
/*Name: mem_share_addrcheck                                  */
/*Retu: int 1 0                                              */
/*Desc: 检查共享内存释放有效                                           */
/*-----------------------------------------------------------*/
int mem_share_addrcheck(char* pMemAdd);

/*-----------------------------------------------------------*/
/*Name: mem_share_malloc                                     */
/*Retu: void*                                                */
/*Desc: 申请一个块共享内存                                            */
/*-----------------------------------------------------------*/
void* mem_share_malloc(int iSize, int iModule);

/*-----------------------------------------------------------*/
/*Name: mem_share_free                                       */
/*Retu: void                                                 */
/*Desc: 释放一块共享内存                                             */
/*-----------------------------------------------------------*/
void mem_share_free(void *pBlock, int iModule);

/*-----------------------------------------------------------*/
/*Name: mem_share_free_bydata                                */
/*Retu: void                                                 */
/*Desc: 通过消息的数据体 释放一块共享内存                                    */
/*-----------------------------------------------------------*/
void mem_share_free_bydata(void *pBlock, int iModule);

/*-----------------------------------------------------------*/
/*Name: mem_share_addrmap                                    */
/*Retu: void*                                                */
/*Desc: 偏移映射为地址                                              */
/*-----------------------------------------------------------*/
void* mem_share_addrmap(void *pOffset);

/*-----------------------------------------------------------*/
/*Name: mem_share_addrunmap                                  */
/*Retu: int                                                  */
/*Desc: 地址映射为偏移                                              */
/*-----------------------------------------------------------*/
void* mem_share_addrunmap(void *pBlkAddr);

/*-----------------------------------------------------------*/
/*Name: mem_share_timeoutfree                                */
/*Retu: 返回释放内存块数                                             */
/*-----------------------------------------------------------*/
int mem_share_timeoutfree(unsigned long iTickOffset);


/*-----------------------------------------------------------*/
/*Name: mem_share_cacheinfor                                 */
/*Para: pBuffer ,return display infor                        */
/*Para: iBufLen >= 1024                                      */
/*Retu: -1 error >=0 datalen                                 */
/*Desc: 显示共享内存的状态信息                                          */
/*-----------------------------------------------------------*/
int mem_share_cacheinfor(char *pBuffer, int iBufLen);


/*-----------------------------------------------------------*/
/*Name: mem_share_moduleinfor                                */
/*Para: iBufLen > 8192                                       */
/*Retu: -1 error > 0 datalen                                 */
/*Desc: 显示共享内存模块使用信息                                         */
/*-----------------------------------------------------------*/
int mem_share_moduleinfor(char *pBuffer, int iBufLen);

/*-----------------------------------------------------------*/
/*Name: mem_share_blockinfor                                 */
/*Para: iBufLen > 128K                                       */
/*Retu: -1 error > 0 datalen                                 */
/*Desc: 显示共享内存已分配块信息                                         */
/*-----------------------------------------------------------*/
int mem_share_blockinfor(char *pBuffer, int iBufLen, int iPoolId);

/*-----------------------------------------------------------*/
/*Name: mem_share_usedblkinfor                               */
/*Para: iBufLen > 128K                                       */
/*Retu: -1 error > 0 datalen                                 */
/*Desc: 显示共享内存已分配块信息                                         */
/*-----------------------------------------------------------*/

int mem_share_usedblkinfor(char *pBuffer, int iBufLen, int iPoolId, int iBlkcou);
/*====================================================================================================================*/

#define ipc_msg_malloc(iSize, iModule)  mem_share_malloc(iSize, iModule)

#define ipc_msg_free(pBlock, iModule)   mem_share_free(pBlock, iModule)

/*====================================================================================================================*/
/*====================================================================================================================*/

#endif
